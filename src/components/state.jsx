import React from "react";

function State() {
  return (
    <>
      <h2>State</h2>
      <p>
        Объект state описывает внутреннее состояние компонента, он похож на
        props за тем исключением, что состояние определяется внутри компонента и
        доступно только из компонента. Если props представляет входные данные,
        которые передаются в компонент извне, то состояние хранит такие объекты,
        которые создаются в компоненте и полностью зависят от компонента. Также
        в отличие от props значения в state можно изменять.
      </p>
      <p>
        И еще важный момент - значения из state должны использоваться при
        рендеринге. Если какой-то объект не используется в рендерниге
        компонента, то нет смысла сохранять его в state.
      </p>
      <p>
        Нередко state описывает какие-то визуальные свойства элемента, которые
        могут изменяться при взаимодействие с пользователем. Например, кнопку
        нажали, и соответственно можно изменить ее состояние - придать ей
        какой-то другой цвет, тень и так далее. Кнопку нажали повторно - можно
        вернуть исходное состояние.
      </p>
      <p>Пример:</p>
      <pre>
        <code>{`class Clock extends React.Component {
  constructor(props) {
    super(props);
    this.state = {date: new Date()};
  }
  update(){
    this.setState(state=>({date: state.date++}))
  }
  render() {
    return (
      <div>
        <h1>Привет, мир!</h1>
        <h2>Сейчас {this.state.date.toLocaleTimeString()}.</h2>
      </div>
    );
  }
}`}</code>
      </pre>
      <p>
        Стоит отметить, что традиционно объект state применялся только в
        классах-компонентах.В функциональных же компонентах для управления
        состоянием применяется другая архитектура, основанная на хуках.
      </p>
      <pre>
        <code>{`function Example() {
  // Объявление новой переменной состояния «count»
  const [count, setCount] = useState(0);

  return (
    <div>
      <p>Вы кликнули {count} раз(а)</p>
      <button onClick={() => setCount(count + 1)}>
        Нажми на меня
      </button>
    </div>
  );
}`}</code>
      </pre>
    </>
  );
}

export default State;
