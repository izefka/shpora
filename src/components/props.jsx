import React from "react";

function Props() {
  return (
    <>
      <h2>Props</h2>
      <p>
        Props представляет коллекцию значений, которые ассоциированы с
        компонентом. Эти значения позволяют создавать динамические компоненты,
        которые не зависят от жестко закодированных статических данных.
      </p>

      <p>Пример при функциональном подходе:</p>
      <pre>
        <code>{`function Hello(props) {
  return <div>
            <p>Имя: {props.name}</p>
            <p>Возраст: {props.age}</p>
    </div>;
 }`}</code>
      </pre>
      <p>
        Параметр props, который передается в функцию компонента, инкапсулирует
        свойства объекта. В частности, свойство name и age. При рендеринге мы
        можем создать набор компонентов Hello, но передать в них разные данные
        для name и age. И таким образом, получим набор однотипной разметки html,
        наполненной разными данными.
      </p>
      <p>При использовании классов:</p>
      <pre>
        <code>{`class Hello extends React.Component {
  render() {
    return <div>
            <p>Имя: {this.props.name}</p>
            <p>Возраст: {this.props.age}</p>
    </div>;
  }
}`}</code>
      </pre>
      <p>
        Классовая компонента также извне получает объект свойств, который
        доступен через this.props.
      </p>
    </>
  );
}

export default Props;
